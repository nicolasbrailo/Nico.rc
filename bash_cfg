# Access to my fastgrep script from everywhere without adding a new $PATH entry
alias fastgrep='~/src/Nico.rc/fastgrep.sh'
alias gf='~/src/Nico.rc/fastgrep.sh'

function xdg-what() {
  xdg-mime query default $(xdg-mime query filetype $@)
}

function xdg-handlers-for() {
  cat /usr/share/applications/mimeinfo.cache | grep "$(xdg-mime query filetype $@)="
}

function xdg-set-default-for() {
  echo "NOT IMPL"
  echo "EG xdg-mime default audacity.desktop audio/x-wav"
}

alias beep="aplay --quiet ~/src/Nico.rc/beam.wav"

alias xo='xdg-open'

alias gnomerestart='killall -SIGQUIT gnome-shell'

function binexists() {
  local cmd="$1"
  return $(command -v "$cmd" &>/dev/null)
}

function tryAlias() {
  local default="$1"
  local preferred="$2"

  # in case of an alias with params (eg `alias foo='ls -l'`) we want to check
  # if binexists `ls`, not 'ls -l'
  local preferred_bin=$(echo "$preferred" | awk '{print $1;}')

  if binexists "$preferred_bin"; then
    #echo "alias $default=\"$preferred\""
    eval "alias $default=\"$preferred\""

    # Try adding compgens for the alias
    _completion_loader "$preferred_bin"
    $(complete -p "$preferred_bin" | sed -E 's/[[:space:]]+'"$preferred_bin"'/ '"$default"'/g')
  fi
}

# Some fancy aliases from https://github.com/ibraheemdev/modern-unix
tryAlias cat bat
tryAlias du duf
#tryAlias grep rg
tryAlias ls "exa -l"
tryAlias vim vimx


GPG_TTY=`tty`
export GPG_TTY

# Configure history
export HISTFILESIZE=1000000
export HISTSIZE=1000000
export HISTIGNORE='ls:bg:fg:history:cd:man:exa:'
HISTCONTROL=ignoredups:erasedups
shopt -s histappend
#export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"
export PROMPT_COMMAND="history -a"

# For some reason, without this $VAR<tab> gets escaped to \$VAR
shopt -s direxpand

export EDITOR=vim

# Make C-w stop on slashes and spaces (instead of space only)
stty werase undef
bind '\C-w:unix-filename-rubout'

# Safe PS1
export PS1='\A \h:\w \$ '

# Color PS1
# Pick an annoying default color, to remind myself to change it
if [ -z "$THIS_HOST_COLOR" ]; then export THIS_HOST_COLOR=103; fi
export COLOR_RESET='\[\e[0m\]'
export COLOR_SET='\[\e['$THIS_HOST_COLOR'm\]'
export PS1_NL_SEP=''
if [ -n "$(LC_ALL=C type -t _scm_prompt)" ] && [ "$(LC_ALL=C type -t _scm_prompt)" = function ]; then
  export PS1='\A '$COLOR_SET'\h'$COLOR_RESET':\w$( _scm_prompt " (%s)") $PS1_NL_SEP\$ ';
else
  export LONG_PS1='\A '$COLOR_SET'\h'$COLOR_RESET':\w$PS1_NL_SEP\$ ';
  export SHORT_PS1='\A \w$PS1_NL_SEP\$ ';
  export PS1=$LONG_PS1
fi

function on_bash_resize() {
  local min_blank_cols=50
  local long_ps1_len=$(expr length "$LONG_PS1")
  local short_ps1_len=$(expr length "$SHORT_PS1")
  local term_cols=$(tput cols)
  local cols_after_long_ps1=$(( $term_cols - $long_ps1_len ))
  local cols_after_short_ps1=$(( $term_cols - $short_ps1_len ))
  if [[ $cols_after_long_ps1 -gt $min_blank_cols  ]]; then
    export PS1="$LONG_PS1"
    export PS1_NL_SEP=''
  elif [[ $cols_after_short_ps1 -gt $min_blank_cols ]]; then
    export PS1="$SHORT_PS1"
    export PS1_NL_SEP=''
  else
    export PS1="$SHORT_PS1"
    export PS1_NL_SEP=$'\n'
  fi
}

on_bash_resize
trap on_bash_resize SIGWINCH

# Add custom scripts to path
if [ -d "$HOME/src/bin" ]; then
    PATH="$HOME/src/bin:$PATH"
fi

function lintandreview() {
  if [ `arc lint --never-apply-patches | tee /dev/tty | wc -l` != 1 ]; then
    echo "Lint warnings detected, no review created";
  else
    jf submit --draft
  fi
}

