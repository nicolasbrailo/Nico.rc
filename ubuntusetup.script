#!/usr/bin/bash

set -euo pipefail

echo "This script may be dangerous, you should run it step by step / copypasting commands"
exit 0

# Needed to bootstrap minimal installs
su - apt-get install sudo
usermod  -a -G sudo BATMAN
# Uncomment line to enable group sudo (or add user to sudoers)
vim /etc/sudoers

if [[ $(cat /etc/network/interfaces | grep -c 'auto eno1' ) -ne 1 ]]; then
  echo -e "Eth network up on boot seems missing, this may be needed\n\n"
  echo 'echo auto eno1 >> /etc/network/interfaces'
  echo 'echo allow-hotplug eno1 >> /etc/network/interfaces'
  echo 'echo iface eno1 inet dhcp >> /etc/network/interfaces'
  read
fi


# Continue with installation for normal (not minimal) systems
sudo apt-get update
sudo apt-get upgrade
sudo apt-get -y install vim git terminator tmux build-essential net-tools iputils-ping curl wget htop
sudo apt-get -y remove nano
export EDITOR=vim
echo "export EDITOR=vim" >> "/home/$USER/.bashrc"
sudo 'echo "export EDITOR=vim" >> "/home/$USER/.bashrc"'

sudo apt-get install firefox vlc

# Remap capslock esc
sudo apt-get install gnome-tweaks

# Gnome top-panel tweaks
sudo apt install gnome-shell-extension-manager chrome-gnome-shell

# Cleanup
rm -rf Documents/ Music/ Pictures/ Public/ Templates/ Videos/

## Git global defaults
git config --global user.email "nicolasbrailo@gmail.com"
git config --global user.name "Nico B"


## Gen an ssh key for github
if [[ ! -f "/home/$USER/.ssh/id_rsa" ]]; then
  echo "No ssh key detected, generating one..."
  ssh-keygen
  cat "/home/$USER/.ssh/id_rsa.pub"
  echo "Paste key here: https://github.com/settings/ssh/new"
  echo "Enter to continue"
  read
fi


## Clone Nico.rc and setup links
SRC_ROOT="/home/$USER/src"
mkdir -p "$SRC_ROOT"
pushd "$SRC_ROOT"
git clone --recurse-submodules git@github.com:nicolasbrailo/Nico.rc.git
popd
ln -s "$SRC_ROOT/Nico.rc/vimrc" "/home/$USER/.vimrc"
ln -s "$SRC_ROOT/Nico.rc/vim" "/home/$USER/.vim"
mkdir -p "/home/$USER/.config/terminator"
ln -s "$SRC_ROOT/Nico.rc/terminator/config" "/home/$USER/.config/terminator/config"
ln -s "$SRC_ROOT/Nico.rc/easystroke" "/home/$USER/.easystroke"
ln -s "$SRC_ROOT/Nico.rc/tmuxrc" "/home/$USER/.tmux.conf"
ln -s "$SRC_ROOT/Nico.rc/inputrc" "/home/$USER/.inputrc"

BASH_EXTRAS=$(cat <<EOF
export THIS_HOST_COLOR=91
[ -f '/home/batman/src/Nico.rc/bash/base.sh' ] && source '/home/batman/src/Nico.rc/bash/base.sh'
[ -f '/home/batman/src/Nico.rc/bash/ps1.sh' ] && source '/home/batman/src/Nico.rc/bash/ps1.sh'
[ -f '/home/batman/src/Nico.rc/bash/linux.sh' ] && source '/home/batman/src/Nico.rc/bash/linux.sh'
[ -f '/home/batman/src/Nico.rc/bash/goto.sh' ] && source '/home/batman/src/Nico.rc/bash/goto.sh'
[ -f '/home/batman/src/Nico.rc/bash/android.sh' ] && source '/home/batman/src/Nico.rc/bash/android.sh'
EOF
)
echo "$BASH_EXTRAS" >> "/home/$USER/.bashrc"

INSTALL_APT_FFX=$(true)
if $INSTALL_APT_FFX; then
  echo "Install Firefox from apt repo"
  sudo install -d -m 0755 /etc/apt/keyrings
  wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc > /dev/null
  gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | awk '/pub/{getline; gsub(/^ +| +$/,""); print "\n"$0"\n"}'
  echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list > /dev/null
  sudo apt-get update && sudo apt-get install -y firefox-beta
fi

## Firefox -> remove tab bar
FFX_PROFILE_BASE="/home/$USER/snap/firefox/common/.mozilla/firefox"
if [ ! -d "$FFX_PROFILE_BASE" ]; then
  FFX_PROFILE_BASE="/home/$USER/.mozilla/firefox"
fi

FFX_PROFILE=$( find "$FFX_PROFILE_BASE" -maxdepth 1 -type d -name '*default*' )
FFX_NO_TAB_BAR=$(cat <<EOF
#TabsToolbar { visibility: collapse; }
#titlebar { visibility: collapse; }
#sidebar-header { visibility: collapse !important; }
EOF
)

if [[ $( echo "$FFX_PROFILE" | wc -l ) -gt 0 && ! -z "$FFX_PROFILE" ]]; then
  for profile in $FFX_PROFILE; do
    echo "Firefox profiles lives @ $profile"
    mkdir -p "$profile/chrome"
    if [[ ! -f "$profile/chrome/userChrome.css" ]]; then
      echo "$FFX_NO_TAB_BAR" > "$profile/chrome/userChrome.css" 
      echo "Created $profile/chrome/userChrome.css" 
      echo "Remember to set 'toolkit.legacyUserProfileCustomizations' in about:config"
    else
      echo "Already exists: $profile/chrome/userChrome.css" 
    fi
  done
else
  echo "Can't find Firefox profile @ $FFX_PROFILE_BASE"
fi


# Extra tools, replacement for std utils. Automatically aliased if avaialble by custom bashrc.
sudo apt-get install bat duf ripgrep exa
## Misc
echo "Spotify @ https://www.spotify.com/uk/download/linux/"
echo sudo apt-get install chromium
echo [Will require logout] sudo apt-get install gnome-shell-extension-dashtodock gnome-shell-extension-dash-to-panel

